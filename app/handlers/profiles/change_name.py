import logging

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup

from app import dispatcher as dp
from app.database import user_db
from app.keyborads.common import generate_inline_keyboard

logger = logging.getLogger(__name__)


class ChangeUserName(StatesGroup):
    waiting_for_first_name = State()
    waiting_for_last_name = State()


@dp.callback_query_handler(Text(equals='profile_edit_name'))
async def change_username(callback: types.CallbackQuery):
    message = callback.message
    await ChangeUserName.waiting_for_first_name.set()

    keyboard_inline = generate_inline_keyboard(
        {
            "–û—Ç–º–µ–Ω–∞": 'cancel',
        }
    )
    await message.answer(
        '–•–æ—Ö–æ—Ö–æ, –ø–æ—Ä–∞ —É–∫–∞–∑–∞—Ç—å —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –°–∞–Ω—Ç—ã üéÖ\n'
        '–£—á—Ç–∏, —á—Ç–æ –æ–Ω–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞ –°–∞–Ω—Ç–æ–π.\n\n'
        '*–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–µ –∏–º—è*\n\n'
        ,
        reply_markup=keyboard_inline
    )


@dp.message_handler(state=ChangeUserName.waiting_for_first_name)
async def process_changing_first_name(message: types.Message,
                                      state: FSMContext):
    first_name = message.text
    await state.update_data(first_name=first_name)

    keyboard_inline = generate_inline_keyboard(
        {
            "–û—Ç–º–µ–Ω–∞": 'cancel',
        })

    await ChangeUserName.next()
    await message.answer(
        '*–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é*\n\n',
        reply_markup=keyboard_inline
    )


@dp.message_handler(state=ChangeUserName.waiting_for_last_name)
async def process_changing_last_name(message: types.Message,
                                     state: FSMContext):
    data = await state.get_data()
    first_name = data['first_name']
    last_name = message.text
    user_id = message.chat.id

    keyboard_inline = generate_inline_keyboard(
        {
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ ‚óÄÔ∏è": f"menu_user_profile",
        }
    )
    await user_db().update_user(user_id,
                                first_name=first_name,
                                last_name=last_name)
    await message.answer(
        '–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –∏–∑–º–µ–Ω–µ–Ω—ã.',
        reply_markup=keyboard_inline,
    )
    await state.finish()
