from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ParseMode

from app import dispatcher as dp, bot
from app.database import wish_db, room_db
from app.keyborads.common import (
    create_common_keyboards,
)


class ChangeWish(StatesGroup):
    waiting_for_wishes = State()


async def show_wishes(message: types.Message,
                      room_number: int):
    change_wish = types.InlineKeyboardButton(
        text="–ò–∑–º–µ–Ω–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ ‚úíÔ∏è",
        callback_data=f"room_change-wish_{room_number}"
    )
    keyboard_inline = types.InlineKeyboardMarkup().add(change_wish)
    user_id = message.chat.id
    wishes = await wish_db().get_wishes(user_id, room_number)

    await message.edit_text('–í–∞—à–∏ —Ç–∞–π–Ω—ã–µ –∂–µ–ª–∞–Ω–∏—è üôä: \n'
                            f'{wishes.wish}\n',
                            parse_mode=ParseMode.MARKDOWN,
                            reply_markup=keyboard_inline)


async def update_wishes(message: types.Message,
                        room_number: int):
    await ChangeWish.waiting_for_wishes.set()
    state = dp.get_current().current_state()
    await state.update_data(room_number=room_number)
    await message.edit_text(
        '*–ù–∞–ø–∏—à–∏ –Ω–æ–≤–æ–µ –∂–µ–ª–∞–Ω–∏–µ:*\n\n'
        '–ß—Ç–æ –±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å, –≤–≤–µ–¥–∏—Ç–µ –≤ —á–∞—Ç–µ *–æ—Ç–º–µ–Ω–∞*',
        parse_mode=ParseMode.MARKDOWN,
    )


async def process_updating_wishes(message: types.Message, state: FSMContext):
    user_id = message.chat.id
    keyboard = await create_common_keyboards(message)
    async with state.proxy() as data:
        wish = message.text
        room_number = data['room_number']

    await wish_db().update_or_create(
        wish,
        user_id,
        room_number
    )
    room = await room_db().get_room(room_number)
    await state.finish()
    await bot.delete_message(chat_id=message.from_user.id,
                             message_id=message.message_id)
    await message.answer(
        f'–í–∞—à–∏ –∂–µ–ª–∞–Ω–∏—è –≤ –∫–æ–º–Ω–∞—Ç–µ *{room.name}* –∏–∑–º–µ–Ω–µ–Ω—ã –Ω–∞:\n\n'
        f'{wish}\n\n'
        f'–°–∞–Ω—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—á—Ç–µ—Ç –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è! üéÖ',
        parse_mode=ParseMode.MARKDOWN,
        reply_markup=keyboard
    )
