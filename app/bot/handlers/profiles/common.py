import logging

from aiogram import types
from aiogram.dispatcher.filters import Text

from app.bot import dispatcher as dp
from app.store.database import user_db
from app.bot.keyborads.common import generate_inline_keyboard
from app.bot.handlers.utils.formatters import user_information_formatter

logger = logging.getLogger(__name__)


@dp.callback_query_handler(Text(equals='menu_user_profile'))
async def my_profile(callback: types.CallbackQuery):
    message = callback.message
    keyboard_inline = generate_inline_keyboard(
        {
            "–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å üëã": "profile_edit",
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ ‚óÄÔ∏è": "root_menu",
        }
    )

    user = await user_db().get_user_or_none(message.chat.id)
    user_information = user_information_formatter(user)

    await message.edit_text(
        '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –≤–∞–º–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏'
        ' –ø–æ–¥–∞—Ä–∫–∞ –≤–∞—à–∏–º –¢–∞–π–Ω—ã–º –°–∞–Ω—Ç–æ–π.\n\n'
        '*–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å*:\n\n'
        f'{user_information}\n\n,'
        '–ï—Å–ª–∏ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ,'
        ' –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '
        '*–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å*',
        reply_markup=keyboard_inline
    )


@dp.callback_query_handler(Text(equals='profile_edit'))
async def edit_profile(callback: types.CallbackQuery, ):
    message = callback.message
    keyboard_inline = generate_inline_keyboard(
        {"–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è": "profile_edit_name",
         "–ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å": "profile_edit_address",
         "–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞": "profile_edit_number",
         "–£–¥–∞–ª–∏—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é ‚ùå": "profile_edit_delete_all",
         "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ ‚óÄÔ∏è": "menu_user_profile"

         }
    )
    await message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
                            reply_markup=keyboard_inline)
