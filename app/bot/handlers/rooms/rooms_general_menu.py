import logging

from aiogram import F, Router, types
from app.bot.handlers.formatters import profile_information_formatter
from app.bot.handlers.operations import get_room_number
from app.bot.keyborads.common import generate_inline_keyboard
from app.store.queries.game_result import GameResultRepo
from app.store.queries.rooms import RoomRepo
from app.store.scheduler.operations import get_task

logger = logging.getLogger(__name__)

router = Router()


@router.callback_query(F.data.startswith('room_menu'))
async def my_room(callback: types.CallbackQuery):
    room_number = get_room_number(callback)
    scheduler_task = get_task(room_number)
    room = await RoomRepo().get(room_number)
    user_id = callback.message.chat.id
    is_room_owner = await RoomRepo().is_owner(user_id=user_id,
                                              room_number=room_number)
    
    if room.is_closed:
        await _room_is_closed(callback, room.number, user_id)
    
    else:
        keyboard_dict = {
            '–í–∞—à–∏ –∂–µ–ª–∞–Ω–∏—è üéÅ': f'room_show-wish_{room_number}',
            '–í—ã–π—Ç–∏ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã üö™': f'room_exit_{room_number}'
        }
        
        if is_room_owner:
            if not get_task(room_number):
                start_game_button_name = '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É üé≤'
            else:
                start_game_button_name = '–ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞ ‚úÖ'
            del keyboard_dict['–í—ã–π—Ç–∏ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã üö™']
            keyboard_dict.update(
                {
                    start_game_button_name: f'room_start-game_{room_number}',
                    '–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ üë•': f'room_member-list_{room_number}',
                    '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öí': f'room_config_{room_number}'
                }
            )
        keyboard_dict.update(
            {
                '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ ‚óÄÔ∏è': 'root_menu',
            }
        )
        keyboard_inline = generate_inline_keyboard(keyboard_dict)
        
        text_control_room = (
            f'<b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç–æ–π {room.name}'
            f' ({room.number})</b>\n\n'
            f'<b>–ë—é–¥–∂–µ—Ç</b>: {room.budget}\n\n'
        )
        text_control_room_not_scheduler = (
            '<b>–í—Ä–µ–º—è –∂–µ—Ä–µ–±—å—ë–≤–∫–∏ –µ—â—ë –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ.</b>'
        )
        if scheduler_task:
            next_time_run = scheduler_task.next_run_time.strftime("%Y-%b-%d")
            text_control_room_scheduler = (
                '<b>üïì –ò–≥—Ä–∞ –≤ —Ç–µ–∫—É—â–µ–π –∫–æ–º–Ω–∞—Ç–µ –∑–∞–ø—É—â–µ–Ω–∞ –Ω–∞ '
                f'{next_time_run}</b>\n\n'
            )
            
            message_text = text_control_room + text_control_room_scheduler
        else:
            message_text = text_control_room + text_control_room_not_scheduler
        
        await callback.message.edit_text(
            text=message_text,
            reply_markup=keyboard_inline
        )


async def _room_is_closed(callback: types.CallbackQuery,
                          room_number: int, user_id: int) -> None:
    game_results = await GameResultRepo().get_all_recipients(
        room_id=room_number)
    room_owner = await RoomRepo().is_owner(user_id=user_id,
                                           room_number=room_number)
    if not game_results:
        keyboard_dict = {
            '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É ‚úÖ': f'room_activate_{room_number}',
            '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öí': f'room_config_{room_number}',
            '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é ‚óÄÔ∏è': 'root_menu',
        }
        
        if not room_owner:
            del keyboard_dict['–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É ‚úÖ']
            del keyboard_dict['–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öí']
        
        message_text = (
            f'<b>–ò–≥—Ä–∞ –≤ –∫–æ–º–Ω–∞—Ç–µ {room_number} –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\n\n'
            '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –æ–∫–∞–∑–∞–ª–æ—Å—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º '
            '–¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π –∂–µ—Ä–µ–±—å–µ–≤–∫–∏.\n'
        
        )
        if room_owner:
            additional_text = (
                '\n–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–º–Ω–∞—Ç—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ '
                '<b>–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É</b>, –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –±–æ–ª—å—à–µ –ª—é–¥–µ–π '
                '–∏ –Ω–∞–∑–Ω–∞—á—å—Ç–µ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è –∂–µ—Ä–µ–±—å–µ–≤–∫–∏.'
            )
            message_text = message_text + additional_text
    else:
        keyboard_dict = {
            '–°–≤—è–∑–∞—Ç—å—Å—è —Å –°–∞–Ω—Ç–æ–π': f'room_closed-con-san_{room_number}',
            '–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–º': f'room_closed-con-rec_{room_number}',
            '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é': 'root_menu'
        }
        recipient = await GameResultRepo().get_recipient(room_id=room_number,
                                                         user_id=user_id)
        user_information = profile_information_formatter(recipient)
        
        message_text = (
            '<b>–ò–≥—Ä–∞ –≤ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\n\n'
            '–í—ã —Å—Ç–∞–ª–∏ –¢–∞–π–Ω—ã–º –°–∞–Ω—Ç–æ–π –¥–ª—è:\n'
            f'{user_information}\n'
            '–¢—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–≤–æ–µ–º—É –¢–∞–π–Ω–æ–º—É –°–∞–Ω—Ç–µ,'
            '–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–≤–æ–µ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é.\n'
        )
    
    keyboard_inline = generate_inline_keyboard(keyboard_dict)
    
    await callback.message.edit_text(
        text=message_text,
        reply_markup=keyboard_inline,
    )
