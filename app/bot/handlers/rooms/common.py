import logging

from aiogram import types
from aiogram.dispatcher.filters import Text

from app.bot import dispatcher as dp
from app.bot.handlers.formatters import profile_information_formatter
from app.bot.handlers.operations import get_room_number
from app.bot.keyborads.common import generate_inline_keyboard
from app.store.database import game_result_db, room_db
from app.store.scheduler.operations import get_task

logger = logging.getLogger(__name__)


@dp.callback_query_handler(Text(startswith='room_menu'))
async def my_room(callback: types.CallbackQuery):
    room_number = get_room_number(callback)
    scheduler_task = get_task(room_number)
    room = await room_db().get(room_number)
    user_id = callback.message.chat.id
    is_room_owner = await room_db().is_owner(user_id=user_id,
                                             room_number=room_number)
    
    if room.is_closed:
        
        keyboard_dict = {
            "–°–≤—è–∑–∞—Ç—å—Å—è —Å –°–∞–Ω—Ç–æ–π": f"1",  # TODO –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–ª–±–∞–∫
            "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—é": f"1",  # TODO –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–ª–±–∞–∫
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é": "root_menu"
        }
        recipient = await game_result_db().get_recipient(room_id=room_number,
                                                         user_id=user_id)
        keyboard_inline = generate_inline_keyboard(keyboard_dict)
        user_information = profile_information_formatter(recipient)
        
        message_text = (
            "<b>–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\n\n"
            "–í—ã —Å—Ç–∞–ª–∏ –¢–∞–π–Ω—ã–º –°–∞–Ω—Ç–æ–π –¥–ª—è:\n"
            f"{user_information}\n"
            "–¢—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–≤–æ–µ–º—É –¢–∞–π–Ω–æ–º—É –°–∞–Ω—Ç–µ,"
            "–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–≤–æ–µ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é.\n\n"
            "<b>–£—á—Ç–∏, —á—Ç–æ –≤ —Å—É—Ç–∫–∏ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ –±–æ–ª–µ–µ 3—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.</b>"
        )
        
        await callback.message.edit_text(
            text=message_text,
            reply_markup=keyboard_inline,
        )
    
    else:
        keyboard_dict = {
            "–í–∞—à–∏ –∂–µ–ª–∞–Ω–∏—è üéÅ": f"room_show-wish_{room_number}",
            "–í—ã–π—Ç–∏ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã üö™": f"room_exit_{room_number}"
        }
        
        if is_room_owner:
            if not get_task(room_number):
                start_game_button_name = "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É üé≤"
            else:
                start_game_button_name = '–ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞ ‚úÖ'
            
            keyboard_dict.update(
                {
                    start_game_button_name: f"room_start-game_{room_number}",
                    "–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ üë•": f"room_member-list_{room_number}",
                    "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öí": f"room_config_{room_number}"
                }
            )
        keyboard_dict.update(
            {
                "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ ‚óÄÔ∏è": "root_menu",
            }
        )
        keyboard_inline = generate_inline_keyboard(keyboard_dict)
        
        text_control_room = (
            f'<b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç–æ–π {room.name}'
            f' ({room.number})</b>'
        )
        text_control_room_scheduler = (
            "<b>üïì –ò–≥—Ä–∞ –≤ —Ç–µ–∫—É—â–µ–π –∫–æ–º–Ω–∞—Ç–µ –∑–∞–ø—É—â–µ–Ω–∞ –Ω–∞ "
            f"{scheduler_task.next_run_time.strftime('%Y-%b-%d')}</b>\n\n"
        )
        
        if scheduler_task:
            scheduler_text = text_control_room_scheduler
            message_text = scheduler_text + text_control_room
        else:
            message_text = text_control_room
        
        await callback.message.edit_text(
            text=message_text,
            reply_markup=keyboard_inline
        )
    
    @dp.callback_query_handler(Text(startswith='room_member-list'))
    async def members_list(callback: types.CallbackQuery):
        room_number = get_room_number(callback)
        keyboard_inline = generate_inline_keyboard(
            {
                "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ ‚óÄÔ∏è": f"room_menu_{room_number}"
            }
        )
        room = await room_db().get(room_number)
        members = await room.members
        member_str = ''
        
        for number, member in enumerate(members):
            member_str += f'{number}) @{member.username}\n'
        
        message_text = (
            '–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–Ω–∞—Ç—ã: '
            f'{room.name} ({room_number}):\n\n{member_str}'
        )
        
        await callback.message.edit_text(
            text=message_text,
            reply_markup=keyboard_inline,
        )
