import logging

from aiogram import F, Router, types
from aiogram.fsm.context import FSMContext

from app.bot.handlers.operations import get_room_number
from app.bot.keyborads.common import generate_inline_keyboard
from app.bot.states.rooms import ChangeOwner
from app.config import load_config
from app.store.queries.rooms import RoomRepo
from app.store.queries.users import UserRepo

logger = logging.getLogger(__name__)
router = Router()


@router.callback_query(F.data.startswith('room_change-owner'))
async def change_room_owner(callback: types.CallbackQuery, state: FSMContext):
    room_number = get_room_number(callback)
    await state.update_data(room_number=room_number)
    
    keyboard_inline = generate_inline_keyboard({"–û—Ç–º–µ–Ω–∞": 'cancel'})
    
    message_text = (
        '–•–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–æ–º–Ω–∞—Ç—ã?\n'
        '–ù–æ–≤—ã–π –≤–ª–∞–¥–µ–ª–µ—Ü –∫–æ–º–Ω–∞—Ç—ã –¥–æ–ª–∂–µ–Ω —è–≤–ª—è—Ç—å—Å—è –µ–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–º.\n'
        '<b>–£—á—Ç–∏, —á—Ç–æ —Ç—ã –ø–æ—Ç–µ—Ä—è–µ—à—å –∫–æ–Ω—Ç—Ä–æ–ª—å –∑–∞ –∫–æ–º–Ω–∞—Ç–æ–π.</b>\n\n'
        '<b>–î–ª—è —Å–º–µ–Ω—ã –≤–ª–∞–¥–µ–ª—å—Ü–∞, –Ω–∞–ø–∏—à–∏ –µ–≥–æ –Ω–∏–∫.</b>\n'
    )
    initial_bot_message = await callback.message.edit_text(
        text=message_text,
        reply_markup=keyboard_inline)
    await state.update_data(bot_message_id=initial_bot_message)
    await state.set_state(ChangeOwner.waiting_for_owner_name)


@router.message(ChangeOwner.waiting_for_owner_name)
async def process_changing_owner(message: types.Message, state: FSMContext):
    state_data = await state.get_data()
    room_number = state_data['room_number']
    previous_owner = message.chat.id
    new_owner = message.text
    await message.delete()
    
    bot_message = state_data['bot_message_id']
    
    keyboard_inline = generate_inline_keyboard(
        {
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ ‚óÄÔ∏è": f"room_menu_{room_number}",
        }
    )
    user = await UserRepo().get_user_or_none(new_owner)
    
    if user:
        count_rooms = await RoomRepo().get_count_user_rooms(user.user_id)
        if count_rooms < load_config().room.user_rooms_count:
            await RoomRepo().change_owner(new_owner, room_number)
            
            message_text = (
                '–•–æ-—Ö–æ-—Ö–æ! üéÖ\n\n'
                f'–Ø —Å–º–µ–Ω–∏–ª –≤–ª–∞–¥–µ–ª—å—Ü–∞, —Ç–µ–ø–µ—Ä—å —ç—Ç–æ <b>{new_owner}</b>'
            )
            
            await bot_message.edit_text(
                text=message_text,
                reply_markup=keyboard_inline,
            )
            await state.clear()
            logger.info(f'The owner [{previous_owner}] of room '
                        f'[{room_number}] has been changed to [{user.user_id}]')
        else:
            message_text = ('–î–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç '
                            '–±—ã—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –∫–æ–º–Ω–∞—Ç—ã.')
            
            await bot_message.edit_text(
                text=message_text,
                reply_markup=keyboard_inline,
            )
            await state.clear()
    else:
        message_text = '–¢–∞–∫–æ–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.'
        
        await bot_message.edit_text(
            text=message_text,
            reply_markup=keyboard_inline,
        )
        await state.clear()
