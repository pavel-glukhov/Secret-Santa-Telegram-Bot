version: '3.10'

services:
  db:
    image: postgres:16.1
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./deploy/postgres/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env

  redis:
    image: redis:7.2.3
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    volumes:
      - redis_data:/data
    env_file:
      - .env

  nginx:
    image: nginx:1.25.3
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/prod/default.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
      - template_value:/var/html/template/
      - ./deploy/certbot/www/:/var/www/certbot/:ro
      - ./deploy/certbot/conf/:/etc/nginx/ssl/:ro
    environment:
      - NGINX_HOST_NAME=${DOMAIN_NAME}
    env_file:
      - .env

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./deploy/certbot/www/:/var/www/certbot/:rw
      - ./deploy/certbot/conf/:/etc/letsencrypt/:rw

  backend:
    build: .
    restart: always
    command: bash -c "aerich init-db && aerich migrate && aerich upgrade && uvicorn main:create_app --host 0.0.0.0 --port 8000"
    volumes:
      - static_value:/code/static/
      - template_value:/code/templates/
      - type: bind
        source: ${LOGS_MOUNT_FOLDER}
        target: /code/logs/
    ports:
      - "8000:8000"
    environment:
      - TZ=Asia/Almaty
    depends_on:
      - db
      - redis
      - nginx
    env_file:
      - .env

volumes:
  postgres_data:
  template_value:
  redis_data:
  log_value:
  static_value: